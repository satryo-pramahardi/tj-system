services:

  # === SUPPORT SERVICES ===

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: transjakarta
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    ports:
      - "5672:5672"   # AMQP
      - "15672:15672" # Web UI
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  mqtt-broker:
    image: eclipse-mosquitto:latest
    restart: always
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - mqtt_data:/mosquitto/data

  # === BACKEND SERVICES ===
  geofence_worker:
    build:
      context: .
      dockerfile: docker/geofence_worker.Dockerfile
    depends_on:
      - rabbitmq
    env_file:
      - .env.docker
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    depends_on:
      - db
      - rabbitmq
    env_file:
      - .env.docker
    restart: unless-stopped
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  db_data:
  rabbitmq_data:
  mqtt_data:
